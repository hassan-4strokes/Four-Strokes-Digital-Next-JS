{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/user.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nimport validator from \"validator\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Name\"],\r\n        minLength: [3, \"Name Should Have Atleast 3 Characters\"]\r\n    },\r\n\r\n    username: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Username\"],\r\n        minLength: [3, \"Username Should Have Atleast 3 Characters\"],\r\n        unique: [true, \"Username Already Exists\"],\r\n        lowercase: true,\r\n        trim: true\r\n    },\r\n\r\n    email: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Email\"],\r\n        validate: [validator.isEmail, \"Please Enter A Valid Email\"],\r\n        minLength: [3, \"Email Should Have Atleast 3 Characters\"]\r\n    },\r\n\r\n    password: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Password\"],\r\n        minLength: [8, \"Password Should Have Atleast 8 Characters\"],\r\n        select: false\r\n    },\r\n\r\n    role: {\r\n        type: String,\r\n        enum: [\"Admin\", \"Editor\", \"User\"],\r\n        required: [true, \"Please Enter Your Role\"]\r\n    },\r\n    \r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now\r\n    }\r\n})\r\n\r\nconst User = mongoose.models?.users || mongoose.model(\"users\", userSchema);\r\n\r\nexport default User;"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,MAAM;QACF,MAAM;QACN,UAAU;YAAC;YAAM;SAAyB;QAC1C,WAAW;YAAC;YAAG;SAAwC;IAC3D;IAEA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAA4C;QAC3D,QAAQ;YAAC;YAAM;SAA0B;QACzC,WAAW;QACX,MAAM;IACV;IAEA,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,UAAU;YAAC,oIAAA,CAAA,UAAS,CAAC,OAAO;YAAE;SAA6B;QAC3D,WAAW;YAAC;YAAG;SAAyC;IAC5D;IAEA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAA4C;QAC3D,QAAQ;IACZ;IAEA,MAAM;QACF,MAAM;QACN,MAAM;YAAC;YAAS;YAAU;SAAO;QACjC,UAAU;YAAC;YAAM;SAAyB;IAC9C;IAEA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;AACJ;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/database/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst databaseConnection = async () => {\r\n  try {\r\n    await mongoose.connect(\"mongodb+srv://hassan4strokes:hassan4strokes@cluster0.pacbc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\");\r\n    console.log(\"Database Connected Successfully!\");\r\n  } catch (error) {\r\n    console.log(`Some Error Occured While Connecting To Database : ${error}`);\r\n  }\r\n};\r\n\r\nexport default databaseConnection;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,OAAO;IAC1E;AACF;uCAEe"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport User from \"@/models/user.model\";\r\nimport databaseConnection from \"@/database/database\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\n\r\nconst authOptions = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        username: { label: \"Username\", type: \"text\", placeholder: \"username\" },\r\n        password: {\r\n          label: \"Password\",\r\n          type: \"password\",\r\n          placeholder: \"password\",\r\n        },\r\n      },\r\n      async authorize(credentials) {\r\n        databaseConnection();\r\n\r\n        const user = await User.findOne({\r\n          username: credentials.username,\r\n        }).select(\"+password\");\r\n\r\n        if (!user) {\r\n          console.log(\"Invalid credentials\");\r\n          return null;\r\n        }\r\n\r\n        const isPasswordMatch = await bcrypt.compare(\r\n          credentials.password,\r\n          user.password\r\n        );\r\n\r\n        if (!isPasswordMatch) {\r\n          console.log(\"Invalid credentials\");\r\n          return null;\r\n        } else {\r\n          return user;\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n  pages: {\r\n    signIn: \"/auth\",\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n        token.name = user.name;\r\n        token.username = user.username;\r\n        token.email = user.email;\r\n        token.role = user.role;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      session.user.id = token.id;\r\n      session.user.name = token.name;\r\n      session.user.username = token.username;\r\n      session.user.email = token.email;\r\n      session.user.role = token.role;\r\n      return session;\r\n    },\r\n  },\r\n};\r\n\r\nconst handler = NextAuth(authOptions);\r\n\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;oBAAQ,aAAa;gBAAW;gBACrE,UAAU;oBACR,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;YACF;YACA,MAAM,WAAU,WAAW;gBACzB,CAAA,GAAA,6HAAA,CAAA,UAAkB,AAAD;gBAEjB,MAAM,OAAO,MAAM,gIAAA,CAAA,UAAI,CAAC,OAAO,CAAC;oBAC9B,UAAU,YAAY,QAAQ;gBAChC,GAAG,MAAM,CAAC;gBAEV,IAAI,CAAC,MAAM;oBACT,QAAQ,GAAG,CAAC;oBACZ,OAAO;gBACT;gBAEA,MAAM,kBAAkB,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAC1C,YAAY,QAAQ,EACpB,KAAK,QAAQ;gBAGf,IAAI,CAAC,iBAAiB;oBACpB,QAAQ,GAAG,CAAC;oBACZ,OAAO;gBACT,OAAO;oBACL,OAAO;gBACT;YACF;QACF;KACD;IACD,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,IAAI,GAAG,KAAK,IAAI;gBACtB,MAAM,QAAQ,GAAG,KAAK,QAAQ;gBAC9B,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,IAAI,GAAG,KAAK,IAAI;YACxB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC9B,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,QAAQ;YACtC,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;YAChC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC9B,OAAO;QACT;IACF;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}