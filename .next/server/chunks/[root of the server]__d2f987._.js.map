{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/blog.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst blogSchema = new mongoose.Schema(\r\n  {\r\n    title: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Title\"],\r\n      minLength: [3, \"Title Should Have Atleast 3 Characters\"],\r\n    },\r\n    slug: {\r\n      type: String,\r\n      unique: [true, \"Blog Slug Already Exists\"],\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"Category\",\r\n      required: true,\r\n    },\r\n    canonical: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Canonical URL\"],\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Description\"],\r\n      // minLength: [10, \"Description Should Have Atleast 10 Characters\"],\r\n    },\r\n    thumbnail: {\r\n      url: {\r\n        type: String,\r\n      }\r\n      // required: [true, \"Please Upload A Thumbnail\"],\r\n    },\r\n    alternateText: {\r\n      type: String,\r\n      // required: [true, \"Please Enter An Alternate Text For Your Thumbnail\"],\r\n    },\r\n    intro: {\r\n      type: Object,\r\n      // required: [true, \"Please Enter Blog Intro Paragraph\"],\r\n    },\r\n    content: {\r\n      type: Object,\r\n      // required: [true, \"Please Enter Content\"],\r\n    },\r\n    metaTitle: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Meta Title\"],\r\n      minLength: [3, \"Meta Title Should Have Atleast 3 Characters\"],\r\n    },\r\n    metaDescription: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Meta Description\"],\r\n      minLength: [10, \"Meta Description Should Have Atleast 10 Characters\"],\r\n    },\r\n    primaryKeyword: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Primary Keyword\"],\r\n    },\r\n    tableOfContent: [\r\n      {\r\n        name: String,\r\n        link: String,\r\n      },\r\n    ],\r\n    faq: [\r\n      {\r\n        question: String,\r\n        answer: String,\r\n      },\r\n    ],\r\n    draft: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    user: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"User\",\r\n      // required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Blog = mongoose.models?.blogs || mongoose.model(\"blogs\", blogSchema);\r\n\r\nexport default Blog;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,OAAO;QACL,MAAM;QACN,4CAA4C;QAC5C,WAAW;YAAC;YAAG;SAAyC;IAC1D;IACA,MAAM;QACJ,MAAM;QACN,QAAQ;YAAC;YAAM;SAA2B;IAC5C;IACA,UAAU;QACR,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;QAC9B,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM;IAER;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;IAEhD;IACA,WAAW;QACT,KAAK;YACH,MAAM;QACR;IAEF;IACA,eAAe;QACb,MAAM;IAER;IACA,OAAO;QACL,MAAM;IAER;IACA,SAAS;QACP,MAAM;IAER;IACA,WAAW;QACT,MAAM;QACN,iDAAiD;QACjD,WAAW;YAAC;YAAG;SAA8C;IAC/D;IACA,iBAAiB;QACf,MAAM;QACN,uDAAuD;QACvD,WAAW;YAAC;YAAI;SAAqD;IACvE;IACA,gBAAgB;QACd,MAAM;IAER;IACA,gBAAgB;QACd;YACE,MAAM;YACN,MAAM;QACR;KACD;IACD,KAAK;QACH;YACE,UAAU;YACV,QAAQ;QACV;KACD;IACD,OAAO;QACL,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;QAC9B,KAAK;IAEP;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/database/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst databaseConnection = async () => {\r\n  try {\r\n    await mongoose.connect(\"mongodb+srv://hassan4strokes:hassan4strokes@cluster0.pacbc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\");\r\n    console.log(\"Database Connected Successfully!\");\r\n  } catch (error) {\r\n    console.log(`Some Error Occured While Connecting To Database : ${error}`);\r\n  }\r\n};\r\n\r\nexport default databaseConnection;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,OAAO;IAC1E;AACF;uCAEe"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/app/api/v1/blogs/get-all-blogs/route.js"],"sourcesContent":["import Blog from \"@/models/blog.model\";\r\nimport databaseConnection from \"@/database/database.js\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\ndatabaseConnection();\r\n\r\nexport async function GET() {\r\n  try {\r\n    const blogs = await Blog.find();\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        blogs,\r\n      },\r\n      {\r\n        status: 200,\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Some Error Occured While Fetching Blogs\", error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        message: \"Blogs Fetching Failed\",\r\n      },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,CAAA,GAAA,6HAAA,CAAA,UAAkB,AAAD;AAEV,eAAe;IACpB,IAAI;QACF,MAAM,QAAQ,MAAM,gIAAA,CAAA,UAAI,CAAC,IAAI;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT;QACF,GACA;YACE,QAAQ;QACV;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C;QACzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,SAAS;QACX,GACA;YACE,QAAQ;QACV;IAEJ;AACF"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}