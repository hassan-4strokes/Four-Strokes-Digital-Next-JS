{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/blog.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst blogSchema = new mongoose.Schema(\r\n  {\r\n    title: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Title\"],\r\n      minLength: [3, \"Title Should Have Atleast 3 Characters\"],\r\n    },\r\n    slug: {\r\n      type: String,\r\n      unique: [true, \"Blog Slug Already Exists\"],\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"Category\",\r\n      required: true,\r\n    },\r\n    canonical: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Canonical URL\"],\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Description\"],\r\n      // minLength: [10, \"Description Should Have Atleast 10 Characters\"],\r\n    },\r\n    thumbnail: {\r\n      url: {\r\n        type: String,\r\n      }\r\n      // required: [true, \"Please Upload A Thumbnail\"],\r\n    },\r\n    alternateText: {\r\n      type: String,\r\n      // required: [true, \"Please Enter An Alternate Text For Your Thumbnail\"],\r\n    },\r\n    intro: {\r\n      type: Object,\r\n      // required: [true, \"Please Enter Blog Intro Paragraph\"],\r\n    },\r\n    content: {\r\n      type: Object,\r\n      // required: [true, \"Please Enter Content\"],\r\n    },\r\n    metaTitle: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Meta Title\"],\r\n      minLength: [3, \"Meta Title Should Have Atleast 3 Characters\"],\r\n    },\r\n    metaDescription: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Meta Description\"],\r\n      minLength: [10, \"Meta Description Should Have Atleast 10 Characters\"],\r\n    },\r\n    primaryKeyword: {\r\n      type: String,\r\n      // required: [true, \"Please Enter A Primary Keyword\"],\r\n    },\r\n    tableOfContent: [\r\n      {\r\n        name: String,\r\n        link: String,\r\n      },\r\n    ],\r\n    faq: [\r\n      {\r\n        question: String,\r\n        answer: String,\r\n      },\r\n    ],\r\n    draft: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    user: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"User\",\r\n      // required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Blog = mongoose.models?.blogs || mongoose.model(\"blogs\", blogSchema);\r\n\r\nexport default Blog;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,OAAO;QACL,MAAM;QACN,4CAA4C;QAC5C,WAAW;YAAC;YAAG;SAAyC;IAC1D;IACA,MAAM;QACJ,MAAM;QACN,QAAQ;YAAC;YAAM;SAA2B;IAC5C;IACA,UAAU;QACR,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;QAC9B,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM;IAER;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;IAEhD;IACA,WAAW;QACT,KAAK;YACH,MAAM;QACR;IAEF;IACA,eAAe;QACb,MAAM;IAER;IACA,OAAO;QACL,MAAM;IAER;IACA,SAAS;QACP,MAAM;IAER;IACA,WAAW;QACT,MAAM;QACN,iDAAiD;QACjD,WAAW;YAAC;YAAG;SAA8C;IAC/D;IACA,iBAAiB;QACf,MAAM;QACN,uDAAuD;QACvD,WAAW;YAAC;YAAI;SAAqD;IACvE;IACA,gBAAgB;QACd,MAAM;IAER;IACA,gBAAgB;QACd;YACE,MAAM;YACN,MAAM;QACR;KACD;IACD,KAAK;QACH;YACE,UAAU;YACV,QAAQ;QACV;KACD;IACD,OAAO;QACL,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;QAC9B,KAAK;IAEP;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/category.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst categorySchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: [true, \"Please Enter Category Name\"],\r\n      minLength: [3, \"Category Name Should Have Atleast 3 Characters\"],\r\n      unique: [true, \"Category Name Already Exists\"],\r\n    },\r\n\r\n    slug: {\r\n      type: String,\r\n      required: [true, \"Please Enter Category Slug\"],\r\n      unique: [true, \"Category Slug Already Exists\"],\r\n      lowercase: [true, \"Category Slug Should Be In Lowercase\"],\r\n      trim: [true, \"Category Slug Should Not Contain Spaces\"],\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Category =\r\n  mongoose.models?.categories || mongoose.model(\"categories\", categorySchema);\r\n\r\nexport default Category;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAiB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACxC;IACE,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAAiD;QAChE,QAAQ;YAAC;YAAM;SAA+B;IAChD;IAEA,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,QAAQ;YAAC;YAAM;SAA+B;QAC9C,WAAW;YAAC;YAAM;SAAuC;QACzD,MAAM;YAAC;YAAM;SAA0C;IACzD;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,WACJ,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,cAAc,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,cAAc;uCAE/C"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/database/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst databaseConnection = async () => {\r\n  try {\r\n    await mongoose.connect(\"mongodb+srv://hassan4strokes:hassan4strokes@cluster0.pacbc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\");\r\n    console.log(\"Database Connected Successfully!\");\r\n  } catch (error) {\r\n    console.log(`Some Error Occured While Connecting To Database : ${error}`);\r\n  }\r\n};\r\n\r\nexport default databaseConnection;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,OAAO;IAC1E;AACF;uCAEe"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/helpers/cloudinary.js"],"sourcesContent":["import { v2 as cloudinary } from \"cloudinary\";\r\n\r\ncloudinary.config({\r\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n    api_key: process.env.CLOUDINARY_API_KEY,\r\n    api_secret: process.env.CLOUDINARY_API_SECRET\r\n})\r\n\r\nexport default cloudinary;"],"names":[],"mappings":";;;AAAA;;AAEA,0IAAA,CAAA,KAAU,CAAC,MAAM,CAAC;IACd,YAAY,QAAQ,GAAG,CAAC,qBAAqB;IAC7C,SAAS,QAAQ,GAAG,CAAC,kBAAkB;IACvC,YAAY,QAAQ,GAAG,CAAC,qBAAqB;AACjD;uCAEe,0IAAA,CAAA,KAAU"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/app/api/v1/blogs/create-new/route.js"],"sourcesContent":["import Blog from \"@/models/blog.model\";\r\nimport Category from \"@/models/category.model\";\r\nimport databaseConnection from \"@/database/database\";\r\nimport { NextResponse } from \"next/server\";\r\nimport cloudinary from \"@/helpers/cloudinary\";\r\n\r\ndatabaseConnection();\r\n\r\nexport async function POST(request) {\r\n\r\n  const formData = await request.formData();\r\n\r\n\r\n  const thumbnail = formData.get(\"thumbnail\");\r\n  const title = formData.get(\"title\");\r\n  const slug = formData.get(\"slug\");\r\n  const category = formData.get(\"category\");\r\n  const canonical = formData.get(\"canonical\");\r\n  const description = formData.get(\"description\");\r\n  const alternateText = formData.get(\"alternateText\");\r\n  const metaTitle = formData.get(\"metaTitle\");\r\n  const metaDescription = formData.get(\"metaDescription\");\r\n  const primaryKeyword = formData.get(\"primaryKeyword\");\r\n  const tableOfContent = JSON.parse(formData.get(\"tableOfContent\"));\r\n  const faq = JSON.parse(formData.get(\"faq\"));\r\n  const content = JSON.parse(formData.get(\"content\"));\r\n  const intro = JSON.parse(formData.get(\"intro\"));\r\n  try {\r\n    const arrayBuffer = await thumbnail.arrayBuffer();\r\n    const buffer = new Uint8Array(arrayBuffer);\r\n    const uploadResponse = await new Promise((resolve, reject) => {\r\n      cloudinary.uploader\r\n        .upload_stream((error, result) => {\r\n          if (error) {\r\n            reject(error);\r\n          } else {\r\n            resolve(result);\r\n          }\r\n        })\r\n        .end(buffer);\r\n    });\r\n\r\n    const categoryID = await Category.findById(category);\r\n\r\n    const blog = await Blog.create({\r\n      title,\r\n      slug,\r\n      category: categoryID._id,\r\n      canonical,\r\n      description,\r\n      thumbnail: {\r\n        url: uploadResponse?.secure_url || \"\",\r\n      },\r\n      alternateText,\r\n      metaTitle,\r\n      metaDescription,\r\n      primaryKeyword,\r\n      tableOfContent,\r\n      faq,\r\n      content,\r\n      intro,\r\n    });\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: \"Blog Created Successfully\",\r\n        blog,\r\n      },\r\n      {\r\n        status: 200,\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Some Error Occured While Creating New Blogs\", error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        message: \"Blogs Creation Failed\",\r\n      },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,CAAA,GAAA,6HAAA,CAAA,UAAkB,AAAD;AAEV,eAAe,KAAK,OAAO;IAEhC,MAAM,WAAW,MAAM,QAAQ,QAAQ;IAGvC,MAAM,YAAY,SAAS,GAAG,CAAC;IAC/B,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,MAAM,WAAW,SAAS,GAAG,CAAC;IAC9B,MAAM,YAAY,SAAS,GAAG,CAAC;IAC/B,MAAM,cAAc,SAAS,GAAG,CAAC;IACjC,MAAM,gBAAgB,SAAS,GAAG,CAAC;IACnC,MAAM,YAAY,SAAS,GAAG,CAAC;IAC/B,MAAM,kBAAkB,SAAS,GAAG,CAAC;IACrC,MAAM,iBAAiB,SAAS,GAAG,CAAC;IACpC,MAAM,iBAAiB,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC;IAC/C,MAAM,MAAM,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC;IACpC,MAAM,UAAU,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC;IACxC,MAAM,QAAQ,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC;IACtC,IAAI;QACF,MAAM,cAAc,MAAM,UAAU,WAAW;QAC/C,MAAM,SAAS,IAAI,WAAW;QAC9B,MAAM,iBAAiB,MAAM,IAAI,QAAQ,CAAC,SAAS;YACjD,8HAAA,CAAA,UAAU,CAAC,QAAQ,CAChB,aAAa,CAAC,CAAC,OAAO;gBACrB,IAAI,OAAO;oBACT,OAAO;gBACT,OAAO;oBACL,QAAQ;gBACV;YACF,GACC,GAAG,CAAC;QACT;QAEA,MAAM,aAAa,MAAM,oIAAA,CAAA,UAAQ,CAAC,QAAQ,CAAC;QAE3C,MAAM,OAAO,MAAM,gIAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAC7B;YACA;YACA,UAAU,WAAW,GAAG;YACxB;YACA;YACA,WAAW;gBACT,KAAK,gBAAgB,cAAc;YACrC;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,SAAS;YACT;QACF,GACA;YACE,QAAQ;QACV;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+CAA+C;QAC7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,SAAS;QACX,GACA;YACE,QAAQ;QACV;IAEJ;AACF"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}