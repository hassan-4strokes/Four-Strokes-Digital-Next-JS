{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/user.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nimport validator from \"validator\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Name\"],\r\n        minLength: [3, \"Name Should Have Atleast 3 Characters\"]\r\n    },\r\n\r\n    username: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Username\"],\r\n        minLength: [3, \"Username Should Have Atleast 3 Characters\"],\r\n        unique: [true, \"Username Already Exists\"],\r\n        lowercase: true,\r\n        trim: true\r\n    },\r\n\r\n    email: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Email\"],\r\n        validate: [validator.isEmail, \"Please Enter A Valid Email\"],\r\n        minLength: [3, \"Email Should Have Atleast 3 Characters\"]\r\n    },\r\n\r\n    password: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Password\"],\r\n        minLength: [8, \"Password Should Have Atleast 8 Characters\"],\r\n        select: false\r\n    },\r\n\r\n    role: {\r\n        type: String,\r\n        enum: [\"Admin\", \"Editor\", \"User\"],\r\n        required: [true, \"Please Enter Your Role\"]\r\n    },\r\n    \r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now\r\n    }\r\n})\r\n\r\nconst User = mongoose.models?.users || mongoose.model(\"users\", userSchema);\r\n\r\nexport default User;"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,MAAM;QACF,MAAM;QACN,UAAU;YAAC;YAAM;SAAyB;QAC1C,WAAW;YAAC;YAAG;SAAwC;IAC3D;IAEA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAA4C;QAC3D,QAAQ;YAAC;YAAM;SAA0B;QACzC,WAAW;QACX,MAAM;IACV;IAEA,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,UAAU;YAAC,oIAAA,CAAA,UAAS,CAAC,OAAO;YAAE;SAA6B;QAC3D,WAAW;YAAC;YAAG;SAAyC;IAC5D;IAEA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAA4C;QAC3D,QAAQ;IACZ;IAEA,MAAM;QACF,MAAM;QACN,MAAM;YAAC;YAAS;YAAU;SAAO;QACjC,UAAU;YAAC;YAAM;SAAyB;IAC9C;IAEA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;AACJ;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/database/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst databaseConnection = async () => {\r\n  try {\r\n    await mongoose.connect(\"mongodb+srv://hassan4strokes:hassan4strokes@cluster0.pacbc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\");\r\n    console.log(\"Database Connected Successfully!\");\r\n  } catch (error) {\r\n    console.log(`Some Error Occured While Connecting To Database : ${error}`);\r\n  }\r\n};\r\n\r\nexport default databaseConnection;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,OAAO;IAC1E;AACF;uCAEe"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/app/api/v1/users/login/route.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport User from \"@/models/user.model\";\r\nimport databaseConnection from \"@/database/database\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\ndatabaseConnection();\r\nexport async function POST(request) {\r\n  try {\r\n\r\n    const reqBody = await request.json();\r\n    const { username, password } = reqBody;\r\n\r\n    const user = await User.findOne({ username }).select(\"+password\");\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          message: \"User Does Not Exists\",\r\n        },\r\n        {\r\n          status: 404,\r\n        }\r\n      );\r\n    }\r\n    \r\n    const isPasswordMatch = await bcrypt.compare(password, user.password);\r\n\r\n    if (!isPasswordMatch) {\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          message: \"Invalid Credentials\",\r\n        },\r\n        {\r\n          status: 401,\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n    const tokenData = {\r\n      id: user._id,\r\n      username: user.username,\r\n      email: user.email,\r\n      isAuthenticated: user,\r\n    };\r\n\r\n    const token = jwt.sign(tokenData, process.env.JWT_SECRET, {\r\n      expiresIn: \"1d\",\r\n    });\r\n\r\n    const response = NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: \"User Logged In Successfully\",\r\n        user\r\n      },\r\n      {\r\n        status: 201,\r\n      }\r\n    );\r\n\r\n    response.cookies.set(\"token\", token, {\r\n      httpOnly: true,\r\n      secure: true,\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Some Error Occured While Loggin In User\", error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        message: \"User Login Failed\",\r\n      },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,CAAA,GAAA,6HAAA,CAAA,UAAkB,AAAD;AACV,eAAe,KAAK,OAAO;IAChC,IAAI;QAEF,MAAM,UAAU,MAAM,QAAQ,IAAI;QAClC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;QAE/B,MAAM,OAAO,MAAM,gIAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAS,GAAG,MAAM,CAAC;QAErD,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,SAAS;YACX,GACA;gBACE,QAAQ;YACV;QAEJ;QAEA,MAAM,kBAAkB,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAEpE,IAAI,CAAC,iBAAiB;YACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,SAAS;gBACT,SAAS;YACX,GACA;gBACE,QAAQ;YACV;QAEJ;QAGA,MAAM,YAAY;YAChB,IAAI,KAAK,GAAG;YACZ,UAAU,KAAK,QAAQ;YACvB,OAAO,KAAK,KAAK;YACjB,iBAAiB;QACnB;QAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,WAAW,QAAQ,GAAG,CAAC,UAAU,EAAE;YACxD,WAAW;QACb;QAEA,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAChC;YACE,SAAS;YACT,SAAS;YACT;QACF,GACA;YACE,QAAQ;QACV;QAGF,SAAS,OAAO,CAAC,GAAG,CAAC,SAAS,OAAO;YACnC,UAAU;YACV,QAAQ;QACV;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C;QACzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,SAAS;QACX,GACA;YACE,QAAQ;QACV;IAEJ;AACF"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}