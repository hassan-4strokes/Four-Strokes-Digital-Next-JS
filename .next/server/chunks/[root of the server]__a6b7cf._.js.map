{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/user.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nimport validator from \"validator\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Name\"],\r\n        minLength: [3, \"Name Should Have Atleast 3 Characters\"]\r\n    },\r\n\r\n    username: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Username\"],\r\n        minLength: [3, \"Username Should Have Atleast 3 Characters\"],\r\n        unique: [true, \"Username Already Exists\"],\r\n        lowercase: true,\r\n        trim: true\r\n    },\r\n\r\n    email: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Email\"],\r\n        validate: [validator.isEmail, \"Please Enter A Valid Email\"],\r\n        minLength: [3, \"Email Should Have Atleast 3 Characters\"]\r\n    },\r\n\r\n    password: {\r\n        type: String,\r\n        required: [true, \"Please Enter Your Password\"],\r\n        minLength: [8, \"Password Should Have Atleast 8 Characters\"],\r\n        select: false\r\n    },\r\n\r\n    role: {\r\n        type: String,\r\n        enum: [\"Admin\", \"Editor\", \"User\"],\r\n        required: [true, \"Please Enter Your Role\"]\r\n    },\r\n    \r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now\r\n    }\r\n})\r\n\r\nconst User = mongoose.models?.users || mongoose.model(\"users\", userSchema);\r\n\r\nexport default User;"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,MAAM;QACF,MAAM;QACN,UAAU;YAAC;YAAM;SAAyB;QAC1C,WAAW;YAAC;YAAG;SAAwC;IAC3D;IAEA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAA4C;QAC3D,QAAQ;YAAC;YAAM;SAA0B;QACzC,WAAW;QACX,MAAM;IACV;IAEA,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,UAAU;YAAC,oIAAA,CAAA,UAAS,CAAC,OAAO;YAAE;SAA6B;QAC3D,WAAW;YAAC;YAAG;SAAyC;IAC5D;IAEA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAA4C;QAC3D,QAAQ;IACZ;IAEA,MAAM;QACF,MAAM;QACN,MAAM;YAAC;YAAS;YAAU;SAAO;QACjC,UAAU;YAAC;YAAM;SAAyB;IAC9C;IAEA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;AACJ;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/database/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst databaseConnection = async () => {\r\n  try {\r\n    await mongoose.connect(\"mongodb+srv://hassan4strokes:hassan4strokes@cluster0.pacbc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\");\r\n    console.log(\"Database Connected Successfully!\");\r\n  } catch (error) {\r\n    console.log(`Some Error Occured While Connecting To Database : ${error}`);\r\n  }\r\n};\r\n\r\nexport default databaseConnection;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,OAAO;IAC1E;AACF;uCAEe"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/helpers/AuthToken.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\n\r\n\r\nexport const authToken = (request) => {\r\n    try {\r\n        const token = request.cookies.get(\"token\");\r\n        \r\n        const decodedToken = jwt.verify(token, process.env.JWT_SECRET);\r\n\r\n        return decodedToken.id;\r\n    } catch (error) {\r\n        throw new Error( error.message ) \r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,YAAY,CAAC;IACtB,IAAI;QACA,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC;QAElC,MAAM,eAAe,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;QAE7D,OAAO,aAAa,EAAE;IAC1B,EAAE,OAAO,OAAO;QACZ,MAAM,IAAI,MAAO,MAAM,OAAO;IAClC;AACJ"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/app/api/v1/users/get-my-details/route.js"],"sourcesContent":["import User from \"@/models/user.model\";\r\nimport databaseConnection from \"@/database/database\";\r\nimport { NextResponse } from \"next/server\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { authToken } from \"@/helpers/AuthToken\";\r\n\r\ndatabaseConnection();\r\n\r\nexport async function GET(request) {\r\n  try {\r\n    \r\n    const userId = await authToken(request);\r\n\r\n    const user = await User.findOne({ _id: userId });\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ message: \"User Not Found\" }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json(user, { status: 200 });\r\n  } catch (error) {\r\n    console.error(\"Error fetching user details:\", error);\r\n    return NextResponse.json(\r\n      { message: \"User details fetching failed\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,CAAA,GAAA,6HAAA,CAAA,UAAkB,AAAD;AAEV,eAAe,IAAI,OAAO;IAC/B,IAAI;QAEF,MAAM,SAAS,MAAM,CAAA,GAAA,6HAAA,CAAA,YAAS,AAAD,EAAE;QAE/B,MAAM,OAAO,MAAM,gIAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE,KAAK;QAAO;QAE9C,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA+B,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}