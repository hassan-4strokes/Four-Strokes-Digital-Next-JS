{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/blog.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst blogSchema = new mongoose.Schema(\r\n  {\r\n    title: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Title\"],\r\n      minLength: [3, \"Title Should Have Atleast 3 Characters\"],\r\n    },\r\n    slug: {\r\n      type: String,\r\n      unique: [true, \"Blog Slug Already Exists\"],\r\n    },\r\n    category: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"Category\",\r\n      required: true,\r\n    },\r\n    canonical: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Canonical URL\"],\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Description\"],\r\n      minLength: [10, \"Description Should Have Atleast 10 Characters\"],\r\n    },\r\n    thumbnail: {\r\n      type: String,\r\n      required: [true, \"Please Upload A Thumbnail\"],\r\n    },\r\n    alternateText: {\r\n      type: String,\r\n      required: [true, \"Please Enter An Alternate Text For Your Thumbnail\"],\r\n    },\r\n    intro: {\r\n      type: Object,\r\n      required: [true, \"Please Enter Blog Intro Paragraph\"],\r\n    },\r\n    content: {\r\n      type: Object,\r\n      required: [true, \"Please Enter Content\"],\r\n    },\r\n    metaTitle: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Meta Title\"],\r\n      minLength: [3, \"Meta Title Should Have Atleast 3 Characters\"],\r\n    },\r\n    metaDescription: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Meta Description\"],\r\n      minLength: [10, \"Meta Description Should Have Atleast 10 Characters\"],\r\n    },\r\n    primaryKeyword: {\r\n      type: String,\r\n      required: [true, \"Please Enter A Primary Keyword\"],\r\n    },\r\n    tableOfContent: [\r\n      {\r\n        name: String,\r\n        link: String,\r\n      },\r\n    ],\r\n    faq: [\r\n      {\r\n        question: String,\r\n        answer: String,\r\n      },\r\n    ],\r\n    draft: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    user: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Blog = mongoose.models?.blogs || mongoose.model(\"blogs\", blogSchema);\r\n\r\nexport default Blog;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;QACxC,WAAW;YAAC;YAAG;SAAyC;IAC1D;IACA,MAAM;QACJ,MAAM;QACN,QAAQ;YAAC;YAAM;SAA2B;IAC5C;IACA,UAAU;QACR,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;QAC9B,KAAK;QACL,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;IAClD;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAI;SAAgD;IAClE;IACA,WAAW;QACT,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;IAC/C;IACA,eAAe;QACb,MAAM;QACN,UAAU;YAAC;YAAM;SAAoD;IACvE;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAoC;IACvD;IACA,SAAS;QACP,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;IAC1C;IACA,WAAW;QACT,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,WAAW;YAAC;YAAG;SAA8C;IAC/D;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;YAAC;YAAM;SAAkC;QACnD,WAAW;YAAC;YAAI;SAAqD;IACvE;IACA,gBAAgB;QACd,MAAM;QACN,UAAU;YAAC;YAAM;SAAiC;IACpD;IACA,gBAAgB;QACd;YACE,MAAM;YACN,MAAM;QACR;KACD;IACD,KAAK;QACH;YACE,UAAU;YACV,QAAQ;QACV;KACD;IACD,OAAO;QACL,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;QAC9B,KAAK;QACL,UAAU;IACZ;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/models/category.model.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst categorySchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: [true, \"Please Enter Category Name\"],\r\n      minLength: [3, \"Category Name Should Have Atleast 3 Characters\"],\r\n      unique: [true, \"Category Name Already Exists\"],\r\n    },\r\n\r\n    slug: {\r\n      type: String,\r\n      required: [true, \"Please Enter Category Slug\"],\r\n      unique: [true, \"Category Slug Already Exists\"],\r\n      lowercase: [true, \"Category Slug Should Be In Lowercase\"],\r\n      trim: [true, \"Category Slug Should Not Contain Spaces\"],\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst Category =\r\n  mongoose.models?.categories || mongoose.model(\"categories\", categorySchema);\r\n\r\nexport default Category;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAiB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACxC;IACE,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,WAAW;YAAC;YAAG;SAAiD;QAChE,QAAQ;YAAC;YAAM;SAA+B;IAChD;IAEA,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA6B;QAC9C,QAAQ;YAAC;YAAM;SAA+B;QAC9C,WAAW;YAAC;YAAM;SAAuC;QACzD,MAAM;YAAC;YAAM;SAA0C;IACzD;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,WACJ,yGAAA,CAAA,UAAQ,CAAC,MAAM,EAAE,cAAc,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,cAAc;uCAE/C"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/database/database.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst databaseConnection = async () => {\r\n  try {\r\n    await mongoose.connect(\"mongodb+srv://hassan4strokes:hassan4strokes@cluster0.pacbc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\");\r\n    console.log(\"Database Connected Successfully!\");\r\n  } catch (error) {\r\n    console.log(`Some Error Occured While Connecting To Database : ${error}`);\r\n  }\r\n};\r\n\r\nexport default databaseConnection;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB;IACzB,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,OAAO;IAC1E;AACF;uCAEe"}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/helpers/cloudinary.js"],"sourcesContent":["import { v2 as cloudinary } from \"cloudinary\";\r\n\r\ncloudinary.config({\r\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n    api_key: process.env.CLOUDINARY_API_KEY,\r\n    api_secret: process.env.CLOUDINARY_API_SECRET\r\n})\r\n\r\nexport default cloudinary;"],"names":[],"mappings":";;;AAAA;;AAEA,0IAAA,CAAA,KAAU,CAAC,MAAM,CAAC;IACd,YAAY,QAAQ,GAAG,CAAC,qBAAqB;IAC7C,SAAS,QAAQ,GAAG,CAAC,kBAAkB;IACvC,YAAY,QAAQ,GAAG,CAAC,qBAAqB;AACjD;uCAEe,0IAAA,CAAA,KAAU"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Muhammad%20Hassan/Programming/Next%20JS/Projects/Four%20Strokes%20Digital/src/app/api/v1/blogs/create-new/route.js"],"sourcesContent":["import Blog from \"@/models/blog.model\";\r\nimport Category from \"@/models/category.model\";\r\nimport databaseConnection from \"@/database/database\";\r\nimport cloudinary from \"@/helpers/cloudinary\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Database connection\r\ndatabaseConnection();\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const formData = await req.formData();\r\n    // const thumbnail = formData.get(\"thumbnail\");\r\n\r\n    // if (!thumbnail) {\r\n    //   return NextResponse.json({\r\n    //     success: false,\r\n    //     message: \"Blog Thumbnail Is Required\",\r\n    //   }, { status: 400 });\r\n    // }\r\n\r\n    // const fileBuffer = await thumbnail.arrayBuffer();\r\n    // const fileBase64 = Buffer.from(fileBuffer).toString(\"base64\");\r\n    // const dataUri = `data:${thumbnail.type};base64,${fileBase64}`;\r\n\r\n    // const cloudinaryResponse = await cloudinary.v2.uploader.upload(dataUri, {\r\n    //   folder: \"Blog Thumbnails\",\r\n    // });\r\n\r\n    // if (!cloudinaryResponse || cloudinaryResponse.error) {\r\n    //   console.error(\r\n    //     \"Cloudinary Error:\",\r\n    //     cloudinaryResponse.error || \"Unknown Cloudinary Error\"\r\n    //   );\r\n    //   return NextResponse.json({\r\n    //     success: false,\r\n    //     message: \"Failed To Upload Thumbnail\",\r\n    //   }, { status: 500 });\r\n    // }\r\n\r\n    const category = await Category.findById(formData.get(\"category\"));\r\n    if (!category) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        message: \"Category Not Found\",\r\n      }, { status: 404 });\r\n    }\r\n\r\n    const {\r\n      title,\r\n      description,\r\n      slug,\r\n      canonical,\r\n      alternateText,\r\n      intro,\r\n      content,\r\n      metaTitle,\r\n      metaDescription,\r\n      primaryKeyword,\r\n      faq,\r\n      tableOfContent,\r\n    } = Object.fromEntries(formData);\r\n\r\n    const isSlugExists = await Blog.findOne({ slug });\r\n    if (isSlugExists) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        message: \"Blog With This Slug Already Exists\",\r\n      }, { status: 400 });\r\n    }\r\n\r\n    const newSlug = slug.toLowerCase().replace(/ /g, \"-\");\r\n\r\n    let parsedIntro = JSON.parse(intro || \"[]\");\r\n    let parsedContent = JSON.parse(content || \"[]\");\r\n    let parsedFaq = JSON.parse(faq || \"[]\");\r\n    let parsedTableOfContent = JSON.parse(tableOfContent || \"[]\");\r\n\r\n    const blog = await Blog.create({\r\n      title,\r\n      description,\r\n      slug: newSlug,\r\n      canonical,\r\n      category: category._id,\r\n      // thumbnail: {\r\n      //   url: cloudinaryResponse.secure_url,\r\n      // },\r\n      alternateText,\r\n      intro: parsedIntro,\r\n      content: parsedContent,\r\n      metaTitle,\r\n      metaDescription,\r\n      primaryKeyword,\r\n      tableOfContent: parsedTableOfContent,\r\n      faq: parsedFaq,\r\n      user: req.user?._id,\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: \"Blog Created Successfully\",\r\n      blog,\r\n    }, { status: 201 });\r\n  } catch (error) {\r\n    console.error(\"Error creating blog:\", error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      message: \"An error occurred while creating the blog\",\r\n    }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,sBAAsB;AACtB,CAAA,GAAA,6HAAA,CAAA,UAAkB,AAAD;AAEV,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,WAAW,MAAM,IAAI,QAAQ;QACnC,+CAA+C;QAE/C,oBAAoB;QACpB,+BAA+B;QAC/B,sBAAsB;QACtB,6CAA6C;QAC7C,yBAAyB;QACzB,IAAI;QAEJ,oDAAoD;QACpD,iEAAiE;QACjE,iEAAiE;QAEjE,4EAA4E;QAC5E,+BAA+B;QAC/B,MAAM;QAEN,yDAAyD;QACzD,mBAAmB;QACnB,2BAA2B;QAC3B,6DAA6D;QAC7D,OAAO;QACP,+BAA+B;QAC/B,sBAAsB;QACtB,6CAA6C;QAC7C,yBAAyB;QACzB,IAAI;QAEJ,MAAM,WAAW,MAAM,oIAAA,CAAA,UAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC;QACtD,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,SAAS;YACX,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,MAAM,EACJ,KAAK,EACL,WAAW,EACX,IAAI,EACJ,SAAS,EACT,aAAa,EACb,KAAK,EACL,OAAO,EACP,SAAS,EACT,eAAe,EACf,cAAc,EACd,GAAG,EACH,cAAc,EACf,GAAG,OAAO,WAAW,CAAC;QAEvB,MAAM,eAAe,MAAM,gIAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAK;QAC/C,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,SAAS;YACX,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,MAAM,UAAU,KAAK,WAAW,GAAG,OAAO,CAAC,MAAM;QAEjD,IAAI,cAAc,KAAK,KAAK,CAAC,SAAS;QACtC,IAAI,gBAAgB,KAAK,KAAK,CAAC,WAAW;QAC1C,IAAI,YAAY,KAAK,KAAK,CAAC,OAAO;QAClC,IAAI,uBAAuB,KAAK,KAAK,CAAC,kBAAkB;QAExD,MAAM,OAAO,MAAM,gIAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAC7B;YACA;YACA,MAAM;YACN;YACA,UAAU,SAAS,GAAG;YACtB,eAAe;YACf,wCAAwC;YACxC,KAAK;YACL;YACA,OAAO;YACP,SAAS;YACT;YACA;YACA;YACA,gBAAgB;YAChB,KAAK;YACL,MAAM,IAAI,IAAI,EAAE;QAClB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT;QACF,GAAG;YAAE,QAAQ;QAAI;IACnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;QACX,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF"}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}